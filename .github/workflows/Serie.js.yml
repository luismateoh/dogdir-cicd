on:
  push:
    branches: [main]


name: Serial Jobs

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 
          
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: ${{secrets.JF_REGISTRY}}
          
      - name: Node install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }} 
          
      - name: Node install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}  
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}

  test:
    name: Run Test
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run test
  scan:
    name: Sonar Scanner
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run sonar-test
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [scan]
    
    steps:
      - uses: actions/checkout@v2
      
      - name: JFrog config 
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}  
          
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}
        if: github.ref == 'refs/heads/main'
      - run: |
          jfrog npm run build
          jfrog rt upload "build/" default-npm-local/ 
          jfrog rt bp
